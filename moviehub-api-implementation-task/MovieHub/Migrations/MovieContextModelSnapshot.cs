// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieHub.Data;

#nullable disable

namespace MovieHub.Migrations
{
    [DbContext(typeof(MovieContext))]
    partial class MovieContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("MovieHub.Models.Cinema", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Cinema");
                });

            modelBuilder.Entity("MovieHub.Models.Movie", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("director")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("genre")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("princessTheatreMovieId")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<string>("rating")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("releaseDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("runtime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("synopsis")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Movie");
                });

            modelBuilder.Entity("MovieHub.Models.MovieCinema", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("cinemaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("movieId")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("showtime")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ticketPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("cinemaId");

                    b.HasIndex("movieId");

                    b.ToTable("MovieCinema");
                });

            modelBuilder.Entity("MovieHub.Models.MovieReview", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("comment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("movieId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("reviewDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("score")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("movieId");

                    b.ToTable("MovieReview");
                });

            modelBuilder.Entity("MovieHub.Models.MovieCinema", b =>
                {
                    b.HasOne("MovieHub.Models.Cinema", null)
                        .WithMany("MovieCinema")
                        .HasForeignKey("cinemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieHub.Models.Movie", null)
                        .WithMany("MovieCinema")
                        .HasForeignKey("movieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MovieHub.Models.MovieReview", b =>
                {
                    b.HasOne("MovieHub.Models.Movie", null)
                        .WithMany("MovieReviews")
                        .HasForeignKey("movieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MovieHub.Models.Cinema", b =>
                {
                    b.Navigation("MovieCinema");
                });

            modelBuilder.Entity("MovieHub.Models.Movie", b =>
                {
                    b.Navigation("MovieCinema");

                    b.Navigation("MovieReviews");
                });
#pragma warning restore 612, 618
        }
    }
}
